InMemoryDb__Enabled=false
InMemoryDb__DatabaseName=KinoDevLocal

#Connection Strings
ConnectionStrings__Kinodev="Server=kinodev-db;port=3306;Database=kinodev_local;User=root;Password=rootpassword;"
ConnectionStrings__Identity="Server=kinodev-db;port=3306;Database=identity_local;User=root;Password=rootpassword;"

DomainDbSettings__MigrationAssembly="KinoDev.DomainService.WebApi"
DomainDbSettings__LogSensitiveData=true

UserInitialising__AdminEmail="admin@kinodev.com"
UserInitialising__AdminPassword="Test123!"
UserInitialising__ManagerEmail="manager@kinodev.com"
UserInitialising__ManagerPassword="Test123!"

DisableHttpsRedirection=true

# MongoDB Connection
MongoDB__ConnectionString=mongodb://mongouser:mongopassword@mongodb:27017/admin
MongoDB__DatabaseName=kinodev_local

#Identity
Authentication__Secret="Your32CharacterLongSecretKeyHere!!"
Authentication__Issuer="https://identity.kinodev.localhost"
Authentication__ClientId="kinodev.internal.client"
Authentication__ClientSecret="kinodev.internal.secret"
Authentication__Expirations__ShortLivingExpirationInMin="15"
Authentication__Expirations__LongLivingExpirationInMin="1140"
Authentication__Audiences__Internal="kinodev.internal"
Authentication__Audiences__Gateway="kinodev.gateway"
Authentication__Domain=".kinodev.localhost"
Authentication__CORS__AllowedCredentialsOrigins="https://ui.kinodev.localhost,https://admin-portal.kinodev.localhost,https://localhost:5173,http://localhost:5173"

CORSAllowedOrigins="https://ui.kinodev.localhost,https://admin-portal.kinodev.localhost,https://localhost:5173,http://localhost:5173"

ApiClients__DomainServiceUri="https://domain-service.kinodev.localhost"
ApiClients__IdentityServiceUri="https://identity.kinodev.localhost"
ApiClients__ApiGatewayUri="https://api-gateway.kinodev.localhost"
ApiClients__PaymentServiceUri="https://payment-service.kinodev.localhost"
ApiClients__StorageServiceUri="https://storage-service.kinodev.localhost"
ApiClients__EmailServiceUri="https://email-service.kinodev.localhost"

BlobStorage__ConnectionString="AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;DefaultEndpointsProtocol=http;BlobEndpoint=http://kinodev-azurite:10000/devstoreaccount1;QueueEndpoint=http://kinodev-azurite:10001/devstoreaccount1;TableEndpoint=http://kinodev-azurite:10002/devstoreaccount1;"

BlobStorage__ContainerNames__Tickets="tickets"
BlobStorage__ContainerNames__PublicImages="public-images"

PdfServiceName="Gotenberg" # Gotenberg, Api2Pdf

GotenbergPdfSettings__BaseUrl="http://gotenberg:3000"

Api2PdfSettings__BaseUrl="https://v2.api2pdf.com"
Api2PdfSettings__ApiKey="{{API2PDF_API_KEY}}"

# PdfService__BaseUrl="http://gotenberg:3000"
# PdfService__BaseUrl="https://kinodev-functions-cmh4addga6crgtc6.polandcentral-01.azurewebsites.net"
PdfService__BaseUrl="http://functions.kinodev.localhost"
# PdfService__BaseUrl="http://pdf-service.are8c6f0gnevheax.polandcentral.azurecontainer.io:3000"

Stripe__SecretKey="{{STRIPE_SECRET_KEY}}"
Stripe__PublicKey="{{STRIPE_PUBLIC_KEY}}"

RabbitMQ__HostName=kinodev-rabbitmq
RabbitMQ__UserName=rabbitmq
RabbitMQ__Password=rabbitmq
RabbitMQ__Port=5672

PortalSettings__GithubLink=https://github.com/andrei-shershan
PortalSettings__LinkedinLink=https://www.linkedin.com/in/andrei-shershan-b11286153/
PortalSettings__Notifications__SignInNotification="This page is only for internal use. If you are not a member of the KinoDev team, please go away."
PortalSettings__Notifications__TestCreditCard="Use 42424242424242 as a test credit card number with any future expiration date and any CVC code."
PortalSettings__StripePK="{{STRIPE_PUBLIC_KEY}}"

MessageBrokerName = "RabbitMQ" # RabbitMQ, AzureServiceBus

AzureServiceBus__ConnectionString="{{AZURE_SERVICE_BUS_CONNECTION_STRING}}"

#Functions
UseFunctionBrokerSubscription=false

ServiceBusConnection="{{AZURE_SERVICE_BUS_CONNECTION_STRING}}"

FunctionsServiceApiUrlsSettings__IgnoreSslErrors=true
FunctionsServiceApiUrlsSettings__StorageServiceUrl="https://storage-service.kinodev.localhost"
FunctionsServiceApiUrlsSettings__EmailServiceUrl="https://email-service.kinodev.localhost"
FunctionsServiceApiUrlsSettings__DomainServiceUrl="https://domain-service.kinodev.localhost"

MessageBroker__Queues__OrderCompleted="order-completed-queue"
MessageBroker__Queues__OrderFileCreated="order-file-created-queue"
MessageBroker__Queues__OrderFileUrlAdded="order-file-url-added-queue"
MessageBroker__Queues__EmailSent="email-sent-queue"

EmailServiceName = "Brevo" # Mailgun, Brevo


Mailgun__ApiKey="{{MAILGUN_API_KEY}}"
Mailgun__Domain="{{MAILGUN_DOMAIN}}"
Mailgun__Region="US"
Mailgun__FromEmail="{{MAILGUN_FROM_EMAIL}}"
Mailgun__FromName="KinoDev Email Service"
Mailgun__BaseUrl = "https://api.mailgun.net/v3/"

Brevo__ApiKey="{{BREVO_API_KEY}}"
Brevo__BaseUrl="https://api.brevo.com/v3/"
Brevo__SenderEmail="{{BREVO_SENDER_EMAIL}}"
Brevo__SenderName="KinoDev Email Service"

Data__QRCodeLink = "{{QR_CODE_LINK}}"

AzureStorage__BaseUrl="http://kinodev-azurite:10000"
AzureStorage__StorageAccount="devstoreaccount1"

Portals__Main="https://ui.kinodev.localhost"
Portals__Admin="https://ui.kinodev.localhost/admin-portal"

# locallly we have one container as store account
Public_Images_Host="http://localhost:10000"
Public_Images_Store_Account="devstoreaccount1"
Public_Tickets_Store_Account="devstoreaccount1"

AppBuilder__IgnoreSslErrors=true

IgnoreHostedService=false

#Swagger
UseSwagger=true

# Github READ PACKAGE Token
GITHUB_USER_NAME={{GITHUB_USER_NAME}}
GITHUB_READ_PACKAGE_TOKEN={{GITHUB_READ_PACKAGE_TOKEN}}

Redis__ConnectionString="{{REDIS_CONNECTION_STRING}}"
Redis__InstanceName="{{REDIS_INSTANCE_NAME}}"